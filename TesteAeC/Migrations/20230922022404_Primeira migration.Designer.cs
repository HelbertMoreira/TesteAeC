// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TesteAeC.Data;

#nullable disable

namespace TesteAeC.Migrations
{
    [DbContext(typeof(AplicationContext))]
    [Migration("20230922022404_Primeira migration")]
    partial class Primeiramigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TesteAeC.Models.Aeroporto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("DATETIME");

                    b.Property<string>("CodigoIcao")
                        .IsRequired()
                        .HasColumnType("VARCHAR(5)");

                    b.Property<string>("Condicao")
                        .IsRequired()
                        .HasColumnType("CHAR(2)");

                    b.Property<string>("CondicaoDesc")
                        .IsRequired()
                        .HasColumnType("VARCHAR(50)");

                    b.Property<int>("DirecaoVento")
                        .HasColumnType("int");

                    b.Property<int>("PressaoAtmosferica")
                        .HasColumnType("int");

                    b.Property<int>("Temp")
                        .HasColumnType("int");

                    b.Property<int>("Umidade")
                        .HasColumnType("int");

                    b.Property<int>("Vento")
                        .HasColumnType("int");

                    b.Property<string>("Visibilidade")
                        .IsRequired()
                        .HasColumnType("VARCHAR(7)");

                    b.HasKey("Id");

                    b.HasIndex("CodigoIcao")
                        .HasDatabaseName("idx_aeroporto_codigo");

                    b.ToTable("Aeroporto", (string)null);
                });

            modelBuilder.Entity("TesteAeC.Models.Cidade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AtualizadoEm")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<string>("NomeCidade")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.HasKey("Id");

                    b.HasIndex("NomeCidade")
                        .HasDatabaseName("idx_localidade_cidade");

                    b.ToTable("Cidade", (string)null);
                });

            modelBuilder.Entity("TesteAeC.Models.Clima", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CidadeId")
                        .HasColumnType("int");

                    b.Property<string>("Condicao")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CondicaoDesc")
                        .IsRequired()
                        .HasColumnType("VARCHAR(30)");

                    b.Property<DateTime>("Data")
                        .HasColumnType("DATETIME");

                    b.Property<int>("IndiceUv")
                        .HasColumnType("int");

                    b.Property<int>("Max")
                        .HasColumnType("int");

                    b.Property<int>("Min")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CidadeId");

                    b.ToTable("Clima", (string)null);
                });

            modelBuilder.Entity("TesteAeC.Models.Clima", b =>
                {
                    b.HasOne("TesteAeC.Models.Cidade", "Cidade")
                        .WithMany("Clima")
                        .HasForeignKey("CidadeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cidade");
                });

            modelBuilder.Entity("TesteAeC.Models.Cidade", b =>
                {
                    b.Navigation("Clima");
                });
#pragma warning restore 612, 618
        }
    }
}
